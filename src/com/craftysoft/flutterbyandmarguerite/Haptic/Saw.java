package com.craftysoft.flutterbyandmarguerite.Haptic;
/*
	How to use:

		// Create and open a device to play effects
		// This should be done only once per application

		Device device = Device.newDevice();

		// Create an IVT buffer with the exported effect definitions

		IVTBuffer ivtBuffer = new IVTBuffer(Saw.ivt);

		// Play one of the effect defined in the IVTBuffer

		device.playIVTEffect(ivtBuffer, Saw.Timeline);

		// When the device is not needed anymore,
		// it must be closed to avoid resource leak

		device.close();

		// For more details, refer to the ImmVibe API Reference.

*/

public class Saw
{
	public static final int Timeline = 0;

	public static final int Periodic = 1;

	public static final int Periodic__1 = 2;

	public static final byte[] ivt = 
	{
		(byte)0x01, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x94, (byte)0x00, (byte)0x42, (byte)0x00,
		(byte)0x00, (byte)0x00, (byte)0x6d, (byte)0x00, (byte)0x7d, (byte)0x00, (byte)0xf1, (byte)0xe0,
		(byte)0x02, (byte)0xe2, (byte)0x00, (byte)0x64, (byte)0xf1, (byte)0xe0, (byte)0x01, (byte)0xe2,
		(byte)0x00, (byte)0xbe, (byte)0xf1, (byte)0xe0, (byte)0x02, (byte)0xe2, (byte)0x01, (byte)0x80,
		(byte)0xf1, (byte)0xe0, (byte)0x01, (byte)0xe2, (byte)0x01, (byte)0xd0, (byte)0xf1, (byte)0xe0,
		(byte)0x02, (byte)0xe2, (byte)0x02, (byte)0x66, (byte)0xf1, (byte)0xe0, (byte)0x01, (byte)0xe2,
		(byte)0x02, (byte)0xa2, (byte)0xf1, (byte)0xe0, (byte)0x02, (byte)0xe2, (byte)0x03, (byte)0x37,
		(byte)0xf1, (byte)0xe0, (byte)0x01, (byte)0xe2, (byte)0x03, (byte)0x5f, (byte)0xf1, (byte)0xe0,
		(byte)0x02, (byte)0xe2, (byte)0x03, (byte)0xff, (byte)0xf1, (byte)0xe0, (byte)0x01, (byte)0xe2,
		(byte)0x04, (byte)0x40, (byte)0xf1, (byte)0xe0, (byte)0x02, (byte)0xe2, (byte)0x04, (byte)0xe4,
		(byte)0xf1, (byte)0xe0, (byte)0x01, (byte)0xe2, (byte)0x05, (byte)0x20, (byte)0xf1, (byte)0xe0,
		(byte)0x02, (byte)0xe2, (byte)0x05, (byte)0xca, (byte)0xf1, (byte)0xe0, (byte)0x01, (byte)0xe2,
		(byte)0x06, (byte)0x10, (byte)0xf1, (byte)0xe0, (byte)0x02, (byte)0xe2, (byte)0x06, (byte)0xe1,
		(byte)0xf1, (byte)0xe0, (byte)0x01, (byte)0xe2, (byte)0x07, (byte)0x31, (byte)0xf1, (byte)0xe0,
		(byte)0x02, (byte)0xe2, (byte)0x07, (byte)0xae, (byte)0xf1, (byte)0xe0, (byte)0x02, (byte)0xe2,
		(byte)0x08, (byte)0x58, (byte)0xff, (byte)0x30, (byte)0x12, (byte)0x00, (byte)0x12, (byte)0x00,
		(byte)0x00, (byte)0x03, (byte)0x00, (byte)0x20, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x7f,
		(byte)0x52, (byte)0x6c, (byte)0x41, (byte)0x30, (byte)0x1c, (byte)0x00, (byte)0x1e, (byte)0x00,
		(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x07, (byte)0x00, (byte)0x00, (byte)0x31,
		(byte)0x33, (byte)0x4b, (byte)0x51, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x12, (byte)0x00,
		(byte)0x24, (byte)0x00, (byte)0x54, (byte)0x00, (byte)0x69, (byte)0x00, (byte)0x6d, (byte)0x00,
		(byte)0x65, (byte)0x00, (byte)0x6c, (byte)0x00, (byte)0x69, (byte)0x00, (byte)0x6e, (byte)0x00,
		(byte)0x65, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x50, (byte)0x00, (byte)0x65, (byte)0x00,
		(byte)0x72, (byte)0x00, (byte)0x69, (byte)0x00, (byte)0x6f, (byte)0x00, (byte)0x64, (byte)0x00,
		(byte)0x69, (byte)0x00, (byte)0x63, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x50, (byte)0x00,
		(byte)0x65, (byte)0x00, (byte)0x72, (byte)0x00, (byte)0x69, (byte)0x00, (byte)0x6f, (byte)0x00,
		(byte)0x64, (byte)0x00, (byte)0x69, (byte)0x00, (byte)0x63, (byte)0x00, (byte)0x20, (byte)0x00,
		(byte)0x23, (byte)0x00, (byte)0x31, (byte)0x00, (byte)0x00, (byte)0x00
	};
}
